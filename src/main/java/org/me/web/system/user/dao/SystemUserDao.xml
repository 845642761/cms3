<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="org.me.web.system.user.dao.ISystemUserDao">
	
	<select id="getList" parameterType="org.me.web.system.user.entity.SystemUser" resultType="org.me.web.system.user.entity.SystemUser">
		select
			<include refid="base_select" />
		from systemUser where 1=1
			<include refid="base_where"></include>
	</select>
	
	<select id="getListByMap" parameterType="Map" resultType="org.me.web.system.user.entity.SystemUser">
		select
			<include refid="base_select" />
		from systemUser where 1=1
			<include refid="base_where"></include>
			<include refid="order"></include>
			<include refid="limit"></include>
	</select>
	
	<select id="getListSize" parameterType="org.me.web.system.user.entity.SystemUser" resultType="Integer">
		select count(1) from systemUser where 1=1
			<include refid="base_where"></include>
	</select>
	
	<select id="getById" parameterType="String" resultType="org.me.web.system.user.entity.SystemUser">
		select 
			<include refid="base_select" />
		from systemUser where strUserId=#{strUserId}
	</select>
	
	<select id="getByLoginName" parameterType="String" resultType="org.me.web.system.user.entity.SystemUser">
		select 
			<include refid="base_select" />
		from systemUser where strLoginName=#{strLoginName}
	</select>
	
	<update id="updateUserState" parameterType="String" >
		update systemUser set nState = #{nState} where strUserId=#{strUserId}
	</update>
	
	<delete id="delById" parameterType="String">
		delete from systemUser where strUserId=#{strUserId}
	</delete>
	
	<sql id="base_select">
		strUserId,strLoginName,strPassword,strName,nSex,strMobile,strPhone,strEmail,strQQ,strWeChar,dtBirthday,strAddress,strHeadURL,nState,strDeptId,dtCreateTime,dtUpdateTime
	</sql>
	
	<sql id="base_where">
		<if test="strUserId != null">
			and strUserId = #{strUserId}
		</if>
		<if test="strLoginName != null">
			and strLoginName = #{strLoginName}
		</if>
		<if test="strPassword != null">
			and strPassword = #{strPassword}
		</if>
		<if test="strName != null">
			and strName like CONCAT('%',#{strName},'%')
		</if>
		<if test="nSex != null">
			and nSex = #{nSex}
		</if>
		<if test="strMobile != null">
			and strMobile = #{strMobile}
		</if>
		<if test="strPhone != null">
			and strPhone = #{strPhone}
		</if>
		<if test="strEmail != null">
			and strEmail = #{strEmail}
		</if>
		<if test="strQQ != null">
			and strQQ = #{strQQ}
		</if>
		<if test="strWeChar != null">
			and strWeChar = #{strWeChar}
		</if>
		<if test="nState != null">
			and nState = #{nState}
		</if>
		<if test="strDeptId != null">
			and strDeptId = #{strDeptId}
		</if>
	</sql>
	
	<sql id="order">
		<choose>
			<when test="orderBy != null and orderBy != ''">
				 order by #{orderBy}
			</when>
			<otherwise>
				 order by dtCreateTime desc
			</otherwise>
		</choose>
	</sql>
	
	<sql id="limit">
		<if test="startIndex != null and startIndex &gt;= 0 and numPerPage !=null and numPerPage &gt;= 0">
			 limit #{startIndex},#{numPerPage}
		</if>
	</sql>
</mapper>